Skipped|016|Read: a node that is write-only (and not readable)
Skipped|004|Write: AccessLevel = CurrentWrite. Expects "Good".
Skipped|009|Write: LocalizedText; write to all, some, and no parameters of this structure type.
Skipped|007|Write: to a node whose AccessLevel is Read Only. Expect Bad_NotWritable.
Skipped|015|Write: LocalizedText with non-existent Locale.
Skipped|001|Check ValueAsText property on ALL configured nodes
Skipped|009|GetEndpoints: Multi-homed with multiple names.
Skipped|010|FindServers: multi-homed PC returns endpoints based on IP/hostname filter.
Skipped|005|ActivateSession: Specify numerous LocaleIds in a ranked order.
Skipped|007|ActivateSession: Specify different user-credentials activating an already active session.
Skipped|010|ActivateSession: Specify user login credentials that do not have sufficient privileges.
Skipped|017|Browse: Should return references of node class View.
Skipped|019|Browse: Should return the Reference Description fields  specified by the ResultMask.
Skipped|009|BrowseNext: Should return Inverse references when the direction is Inverse.
Skipped|015|BrowseNext: Should return Views when the NodeClassMask is set to include Views.
Skipped|014|UnregisterNodes: Should return Good service result when unregistering 50 registered nodes.
Skipped|015|UnregisterNodes: Should return Good service result when unregistering 100 registered nodes.
Not supported|009|Write: Write a <null> to each data-type.
Not supported|001|Server node.
Skipped|initialize|Security User Name Password
Not supported|003|CreateSession: Server diagnostics shows an entry for the client session (if supported).
Not supported|014|BrowseNext: Should return service result Bad_NothingToDo when there are no ContinuationPoints.
Not supported|016|BrowseNext: Should return requested diagnostics as specified by the diagnostic mask.
Not supported|017|BrowseNext: Should return no diagnostic info when the returnDiagnostics mask is 0.
Not supported|009|RegisterNodes: Should return BadInvalidTimestamp when the RequestHeader.Timestamp is too far out of range.
Not supported|011|UnregisterNodes: Should return Bad_NothingToDo when there are no nodes to unregister.
Not supported|014|UnregisterNodes: Should return BadInvalidTimestamp when the RequestHeader.Timestamp is too far out of range.
Not supported|016|UnregisterNodes: Should return Good service result when unregistering three registered nodes and two unregistered nodes.
Skipped|002|TranslateBrowsePathsToNodeIds: Should return good for matching browsePaths and bad for non-matching browsePaths.
Not supported|003|Empty request, expects Bad_NothingToDo.
Not supported|012|Translate: relativePath contains invalid NodeId for referenceTypeId.
Skipped|021|Test ServerCapabilities max operations-per-method for TranslateBrowsePathsToNodeIds.
Not supported|024|TranslateBrowsePathsToNodeIds: Should return BadInvalidTimestamp when the RequestHeader.Timestamp is too far out of range.
Not supported|001|CreateSubscription: Default parameter values.
Not supported|002|CreateSubscription: RequestedPublishingInterval is set to 1.
Not supported|022|CreateSubscription: 1 monitored item, various timing intervals checking for values.
Not supported|023|ModifySubscription: Default parameter values.
Not supported|024|ModifySubscription: RequestedPublishingInterval=7ms greater than RevisedPublishingInterval from CreateSubscription.
Not supported|025|ModifySubscription: RequestedPublishingInterval is 7ms less than RevisedPublishingInterval from CreateSubscription.
Not supported|026|ModifySubscription: RequestedPublishingInterval matches RevisedPublishingInterval from CreateSubscription.
Not supported|027|ModifySubscription: RequestedPublishingInterval=1; Server returns fastest possible value != 0.
Not supported|028|ModifySubscription: RequestedPublishingInterval=0; Server revises the value.
Not supported|029|ModifySubscription: RequestedPublishingInterval=Max Int32.
Not supported|042|Republish: requests are sent out-of-order.
Not supported|043|SetPublishingMode: Disables an enabled Subscription.
Not supported|044|SetPublishingMode: Enables a disabled subscription.
Not supported|045|SetPublishingMode: Enable an already enabled subscription.
Not supported|046|SetPublishingMode: Disable an already disabled subscription.
Not supported|047|SetPublishingMode: specify same subscription 5 times.
Not supported|048|SetPublishingMode: Specify the same subscriptionId multiple times.
Not supported|049|Publish: Default parameters.
Not supported|050|Publish: Acknowledge a valid sequence number from a valid subscription.
Not supported|051|Publish: Acknowldge multiple valid sequence numbers from a valid subscription.
Not supported|053|Publish: Acknowledge a sequenceNumber of 0.
Not supported|054|Publish: Verify scanrates yield an expected number of dataChanges.
Not supported|055|Publish: Acknowledge valid and invalid sequence numbers from a Valid subscription.
Not supported|056|Republish: Default parameters.
Not supported|057|Republish: Retrieves the last 3 updates.
Not supported|062|Republish: Request sequenceNumber from the future.
Not supported|013|Publish: SubscriptionId=0; expect results[0] = Bad_SubscriptionIdInvalid.
Not supported|014|Publish: Acknowldge the same sequenceNumber twice, in the same call.
Not supported|015|Publish: Acknowledge same sequence number twice.
Not supported|016|Publish: Acknowledge multiple invalid SequenceNumbers, expect Results[*]=Bad_SequenceNumberUnknown.
Not supported|017|Publish: Acknowledge multiple invalid sequenceNumbers from multiple valid subscriptions.
Not supported|019|Republish: SubscriptionId = 0.
Not supported|020|Republish: Invalid subscriptionId.
Not supported|021|Republish: RetransmitSequenceNumber = 0.
Not supported|022|Republish: Invalid RetransmitSequenceNumber.
Not supported|023|Republish: Request an already-acknowledged SequenceNumber.
Not supported|024|Republish: Call Republish on a DELETED Subscription.
Not supported|001|Create one subscription. Acknowledge queued SequenceNumbers out of order.
Not supported|002|Create one subscription. Check it exists in Diagnostics.
Not supported|001|Queue 2 Publish() requests in a single session.
Not supported|004|Republish: MessageRetransmissionQueueSize expected to be 2.
Not supported|001|Queue more Publish() requests than the server can support.
Not supported|003|ModifySubscription: check timings after modifying publishing interval.
Not supported|001|Publish: 5 concurrent Publish requests, in a single session.
Not supported|005|Republish
Not supported|001|Publish: Call Publish more times than the server can handle.
Not supported|003|Publish: 10 concurrent Publish requests queued.
Not supported|001|Publish: Issue more requests than the server can handle.
Not supported|001|CreateMonitoredItems: Create a monitored item with the nodeId set to that of a non-Variable node and the attributeId set to a non-Value attribute. Call Publish.
Not supported|002|ModifyMonitoredItems: Modify a single monitored item.
Not supported|003|ModifyMonitoredItems: Single item; ReturnTimestamp=Source.
Not supported|004|ModifyMonitoredItems: Single item; ReturnTimestamp=Server.
Not supported|006|ModifyMonitoredItems: Single item; ReturnTimestamp=Neither.
Not supported|007|ModifyMonitoredItems: Modify single monitoredItem, change queue length to 0.
Not supported|009|ModifyMonitoredItems: Modify the samplingInterval to 10 msec for one item.
Not supported|010|ModifyMonitoredItems: Change the SamplingInterval for all items, vary the scanrate.
Not supported|012|ModifyMonitoredItems: Modify the QueueSize of the first item to maxInt.
Not supported|015|DeleteMonitoredItems: Script deletes all monitored items from a subscription.
Not supported|016|DeleteMonitoredItems: Specifies a valid subscriptionId and multiple monitoredItemIds.
Not supported|017|DeleteMonitoredItems: Specify valid item.
Not supported|020|SetMonitoringMode: Set monitoring mode to disabled for an already disabled monitor item. Call publish each time to verify 
Not supported|021|SetMonitoringMode: Set monitoring mode to sampling for a disabled monitor item. Call publish each time to verify that no 
Not supported|023|SetMonitoringMode: Set monitoring mode to disabled for a sampling monitor item. Call publish each time to verify that no 
Not supported|024|SetMonitoringMode: Set monitoring mode to sampling for an already sampling monitor item. Call publish each time to verify 
Not supported|026|SetMonitoringMode: Set monitoring mode to disabled for a reporting monitor item. Call publish once when the monitoring mode 
Not supported|027|SetMonitoringMode: Set monitoring mode to sampling for a reporting monitor item. Call publish once when the monitoring mode 
Not supported|028|SetMonitoringMode: Set monitoring mode to reporting for an already reporting monitor item. Call publish each time to verify 
Skipped|008|CreateMonitoredItems: Script specifies an invalid IndexRange of “2-4” (hyphen is an incorrect character) for an array item.
Skipped|009|CreateMonitoredItems: Script specifies an invalid IndexRange of “2:2” (not a range) for an array item.
Skipped|011|CreateMonitoredItems: Specify an invalid IndexRange of “-4:-2” (negative) for an array item.
Not supported|017|ModifyMonitoredItems: Specify an invalid subscriptionId.
Not supported|020|ModifyMonitoredItems: Change the ClientHandle for the first item to a number already in use by another MonitoredItem. 
Not supported|022|ModifyMonitoredItems: Request unsupported filter, e.g. PercentDeadband.
Not supported|024|ModifyMonitoredItems: ItemsToModify is empty.
Not supported|025|ModifyMonitoredItems: Specify a value for 'TimestampsToReturn' that is not in the enum.
Not supported|029|SetMonitoringMode: Specify invalid subscriptionId.
Not supported|030|SetMonitoringMode: MonitoredItemIds is empty.
Skipped|032|DeleteMonitoredItems: Specify invalid subscriptionId.
Skipped|033|DeleteMonitoredItems: Specify Invalid monitoredItemId.
Not supported|034|DeleteMonitoredItems: Specify a valid subscriptionId and multiple invalid monitoredItemIds.
Skipped|035|DeleteMonitoredItems: Specify a valid subscriptionId, and multiple monitoredItemIds of which some are valid and some are 
Not supported|037|DeleteMonitoredItems: Script specifies empty monitoredItemIds[].
Not supported|001|CreateMonitoredItems: max items defined by this unit.
Not supported|001|CreateMonitoredItems: Request more items than supported.
Not supported|001|CreateMonitoredItems: Call using "default" parameters (defined in Test Lab Part 8 document section 5.9.1)
Skipped|013|CreateMonitoredItems: Arrays of each type are verified with a call to Publish().
Skipped|016|CreateMonitoredItems: User does not have access.
Not supported|017|CreateMonitoredItems: Script specifies a samplingInterval of 0 ms.
Not supported|018|CreateMonitoredItems: Script specifies samplingInterval of -1 ms.
Not supported|019|CreateMonitoredItems: Script specifies samplingInterval of max duration (max real value).
Not supported|021|CreateMonitoredItems: Script creates multiple monitored items, with both valid and invalid nodeIds
Not supported|022|CreateMonitoredItems: -1 Scanrate
Not supported|034|CreateMonitoredItems: DeadbandType=None & Trigger=Status; Write to StatusCode and Value and call Publish.
Not supported|035|CreateMonitoredItems: Writing of V, VQ and then the same values (no change).
Not supported|037|CreateMonitoredItems: Non-variable node, non-Value attribute.
