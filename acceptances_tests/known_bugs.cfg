Error|003|Read all available attributes from a single (valid) node, in a single call.
Error|004|Read multiple attributes from a valid node with maxAge = 0.
Error|012|Read all available attributes from multiple valid nodes of each different node type, in a single call.
Error|017|Read: Read a single attribute that is not 'Value'. Cycle through AccessLevel, BrowseName, DataType, DisplayName, Historizing, 
Error|028|Read attributes (not Value); sourceTimestamp=null; serverTimestamp is valid.
Error|004|Write: to Value and DisplayName attributes, on multiple invalid Nodes.
Error|008|Write: Write a value using the wrong data-type.
Error|010|Write: UInteger type receives values of incorrect sub-type.
Error|011|Write: Integer receives values of incorrect sub-type.
Error|012|Write: Integer receives value of incorrect sub-type.
Error|002|GetEndpoints: Provide a list of supported locales.
Error|004|GetEndpoints: Mix supported and unsupported locale ids.
Error|013|GetEndpoints: ServerUri is identical in all areas (FindServers, GetEndpoints, Certificates etc.)
Error|002|FindServers: Provide endpoint description Url with an unknown hostname.
Error|005|FindServers: Provide a list of locales not conforming to RFC 3066.
Error|008|FindServers: EndpointUrl is a string but not syntactically a URL.
Error|009|FindServers: repeat -014 100-times within 10-seconds.
Error|005|ActivateSession: Specify numerous LocaleIds in a ranked order.
Error|008|ActivateSession: Call activateSession on a session that has been transferred to a different Channel.
Error|001|CreateSession: Create 2 Sessions. Use the same nonce twice!
Error|002|CreateSession: Invalid ClientNonce length
Error|003|CreateSession: Send ClientCertificate for wrong application (attempted spoofing).
Error|005|CreateSession: Invalid (too short) NonceId.
Error|009|ActivateSession: Specify a UserIdentityToken type that is not supported.
Error|005|Browse: Should return references of the specified ReferenceTypeId and its subtypes when the ReferenceTypeId matches a reference.
Error|006|Browse: Should return references matching the node class as specified by the NodeClassMask.
Error|008|Browse: Should browse multiple nodes with a mix of valid and invalid node IDs.
Error|010|Browse: Should return only the one Reference Description field specified by the ResultMask.
Error|015|Browse: Should return references of the specified ReferenceTypeId (without subtypes) when the ReferenceTypeId matches a parent 
Error|016|Browse: Should return references of the specified ReferenceTypeId and its subtypes when the ReferenceTypeId matches the parent 
Error|017|Browse: Should return references of node class View.
Error|018|Browse: Should return non-null Reference Description fields for all node classes except Object and Variable. For Object and 
Error|020|Browse: Should return references of the specified ReferenceTypeId and its recursive subtypes when the ReferenceTypeId matches 
Error|006|Browse: Should return operation result Bad_ReferenceTypeIdInvalid when ReferenceTypeId does not exist.
Error|010|Browse: Should return operation result Bad_ReferenceTypeIdInvalid when ReferenceTypeId is a node that is not a reference 
Error|001|Browse: Should browse for a maximum of one reference.
Error|005|BrowseNext: Should browse for the next reference and release continuation points.
Error|006|BrowseNext: Should return a ContinuationPoint when ReleaseContinuationPoints is false and more references exist.
Error|007|BrowseNext: Should browse through to the last reference at which point the operation result should have StatusCode Good and 
Error|010|BrowseNext: Should return references of the specified type when a ReferenceTypeId is specified and IncludeSubtypes is false.
Error|011|BrowseNext: Should return references of the specified type and its subtypes when a ReferenceTypeId is specified and IncludeSubtypes 
Error|013|BrowseNext: Should return requested result fields as specified by the ResultMask. 
Error|014|BrowseNext: Should return the number of references requested or the number remaining, whichever is fewer.
Error|001|Browse: Should return operation result Bad_NoContinuationPoints when no more continuation points can be allocated or the 
Error|002|BrowseNext: Should return operation result Bad_ContinuationPointInvalid when using a ContinuationPoint used in a previous 
Error|003|BrowseNext: Should return operation result Bad_ContinuationPointInvalid after releasing the ContinuationPoint.
Error|006|BrowseNext: Should return operation result Bad_ContinuationPointInvalid when the ContinuationPoint has already been used.
Error|008|BrowseNext: Should return service result Bad_SecurityChecksFailed when the AuthenticationToken is null.
Error|009|BrowseNext: Should return service result Bad_SecurityChecksFailed when the AuthenticationToken does not exist.
Error|010|BrowseNext: Should return service result Bad_InvalidTimestamp when RequestHeader.Timestamp is too far out of range.
Error|001|RegisterNodes: Should return a node that refers to NodesToRegister[0].
Error|002|RegisterNodes: Should return five nodes that refer to the five NodesToRegister.
Error|003|RegisterNodes: Should return 25 nodes that refer to the 25 NodesToRegister.
Error|004|RegisterNodes: Should return 50 nodes that refer to the 50 NodesToRegister.
Error|005|RegisterNodes: RegisterNodes: Should return 100 nodes that refer to the 100 NodesToRegister.
Error|006|RegisterNodes: Should return 20 nodes when the same node is registered 20 times.
Error|007|RegisterNodes: Should return five nodes when three existing and two non-existent nodes are registered.
Error|011|UnregisterNodes: Should return Good service result when unregistering a registered node.
Error|012|UnregisterNodes: Should return Good service result when unregistering five registered nodes.
Error|016|UnregisterNodes: Should return Good service result when unregistering three registered nodes and two unregistered nodes.
Error|017|UnregisterNodes: Should return Good service result when unregistering three registered nodes and two non-existent nodes.
Error|021|UnregisterNodes: Should return Good service result when unregistering an unregistered node.
Error|022|UnregisterNodes: Should return Good service result when unregistering multiple unregistered nodes.
Error|023|UnregisterNodes: Should not unregister a registered node when the "source" node is unregistered.
Error|003|RegisterNodes: Should return the non-existent NodeId when the node does not exist.
Error|004|RegisterNodes: Should return non-existent NodeIds when the 500 nodes do not exist.
Error|005|RegisterNodes: specify invalid NodeId; expected Bad_NodeIdInvalid.
Error|006|RegisterNodes: mix of valid and invalid nodes. Expects Bad_InvalidNodeId.
Error|012|TranslateBrowsePathsToNodeIds: Should return four TargetIds, one for each of four BrowsePaths elements.
Error|016|TranslateBrowsePathsToNodeIds: Should return diagnostic info as specified by the returnDiagnostics bit  mask.
Error|017|TranslateBrowsePathsToNodeIds: Should not return diagnostics when returnDiagnostics is 0.
Error|001|TranslateBrowsePathsToNodeIds: Should return operation result Bad_NodeIdInvalid when the starting node has invalid syntax.
Error|004|TranslateBrowsePathsToNodeIds: Should return operation result Bad_NodeIdUnknown when the StartingNode does not exist.
Error|005|TranslateBrowsePathsToNodeIds: Should return operation result Bad_NothingToDo when RelativePaths is empty.
Error|006|TranslateBrowsePathsToNodeIds: Should return operation result Bad_NoMatch when the BrowseName does not match.
Error|007|TranslateBrowsePathsToNodeIds: Should return operation result Bad_BrowseNameInvalid when the last RelativePath element's 
Error|008|TranslateBrowsePathsToNodeIds: Should return operation result Bad_BrowseNameInvalid when a RelativePath element prior to 
Error|011|TranslateBrowsePathsToNodeIds: Should return operation result Bad_NoMatch when a RelativePath element specifies a ReferenceTypeId 
Error|013|TranslateBrowsePathsToNodeIds: Should return Bad_NoMatch when the ReferenceTypeId is a NodeId that does not exist.
Error|014|TranslateBrowsePathsToNodeIds: Should return operation result Bad_BrowseNameInvalid or Bad_NoMatch when a browseName is too 
Error|015|TranslateBrowsePathsToNodeIds: Should return Bad_NoMatch when a RelativePath element's ReferenceTypeId is a parent of the 
Error|018|TranslateBrowsePathsToNodeIds: Should return operation result Bad_NoMatch when the ReferenceTypeId is the NodeId of something 
Error|019|TranslateBrowsePathsToNodeIds: Should return Bad_NoMatch when a RelativePath's element's IsInverse is true and the BrowseName 
Error|020|TranslateBrowsePathsToNodeIds: Should match any node when ReferenceTypeId is null and includeSubtypes is false.
