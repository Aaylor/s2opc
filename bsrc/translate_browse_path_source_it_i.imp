/*
 * Licensed to Systerel under one or more contributor license
 * agreements. See the NOTICE file distributed with this work
 * for additional information regarding copyright ownership.
 * Systerel licenses this file to you under the Apache
 * License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain
 * a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

IMPLEMENTATION
    translate_browse_path_source_it_i

REFINES
    translate_browse_path_source_it

SEES
    constants

CONCRETE_VARIABLES

    current_browsePathSource_idx,
    max_browsePathSource_idx

INVARIANT
    current_browsePathSource_idx : NAT &
    max_browsePathSource_idx : NAT &

    nb_browsePathSourceIdx_max_refs = max_browsePathSource_idx &
    current_browsePathSource_idx : 0..max_browsePathSource_idx &

    (current_browsePathSource_idx = 0 =>
        browsePathSourceIdx_to_iterate = 1..max_browsePathSource_idx &
        browsePathSourceIdx_iterated = {}
    ) &
    (current_browsePathSource_idx /= 0 =>
        browsePathSourceIdx_to_iterate = current_browsePathSource_idx..max_browsePathSource_idx &
        browsePathSourceIdx_iterated = 1..current_browsePathSource_idx)

INITIALISATION
    current_browsePathSource_idx := 0;
    max_browsePathSource_idx := 0

OPERATIONS


    p_continue <-- init_iter_browsePathSourceIdx(p_nb_browsePathSourceIdx_max_refs) =
    BEGIN
        max_browsePathSource_idx := p_nb_browsePathSourceIdx_max_refs;
        current_browsePathSource_idx := 0;
        p_continue := bool (0 < p_nb_browsePathSourceIdx_max_refs)
    END
    ;

    p_continue, p_browsePathSourceIdx <-- continue_iter_browsePathSourceIdx =
    BEGIN
        current_browsePathSource_idx := current_browsePathSource_idx + 1;
        p_browsePathSourceIdx := current_browsePathSource_idx;
        p_continue := bool (current_browsePathSource_idx < max_browsePathSource_idx)
    END

END