/*
 * Licensed to Systerel under one or more contributor license
 * agreements. See the NOTICE file distributed with this work
 * for additional information regarding copyright ownership.
 * Systerel licenses this file to you under the Apache
 * License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain
 * a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

IMPLEMENTATION
   browse_treatment_i
REFINES
   browse_treatment
IMPORTS
    browse_treatment_context
SEES
   constants ,
   constants_statuscodes_bs

OPERATIONS

   set_browse_value_context (p_session, p_maxTargetRef, p_browseView, p_nodeId, p_browseDirection, p_referenceType, p_includeSubtypes) =
   BEGIN
       /* Only set context to start with index 0 of target references */
       setall_browse_value_context(0, p_session, p_maxTargetRef, p_browseView, p_nodeId, p_browseDirection, p_referenceType, p_includeSubtypes)
   END
   ;

   p_service_StatusCode <-- set_browse_value_context_from_continuation_point (p_session , p_continuationPoint) =
   BEGIN
       p_service_StatusCode := e_sc_bad_continuation_point_invalid
   END
   ;

   p_serviceStatusCode , p_continuationPoint , p_nbReferences <-- compute_browse_result =
   BEGIN
       p_serviceStatusCode := e_sc_bad_out_of_memory;
       p_continuationPoint := c_ContinuationPoint_indet;
       p_nbReferences := 0
   END
   ;

   set_session_closed (p_session) =
   BEGIN
       skip
   END
   ;

   p_refTypeId , p_isForward , p_NodeId , p_BrowseName , p_DisplayName , p_NodeClass , p_TypeDefinition <-- getall_browse_result (p_refIndex) =
   BEGIN
       p_refTypeId := c_NodeId_indet;
       p_isForward := TRUE;
       p_NodeId := c_ExpandedNodeId_indet;
       p_BrowseName := c_QualifiedName_indet;
       p_DisplayName := c_LocalizedText_indet;
       p_NodeClass := c_NodeClass_indet;
       p_TypeDefinition := c_ExpandedNodeId_indet
   END
   ;

   p_browseResult <-- getall_and_clear_browse_results =
   BEGIN
       p_browseResult := c_BrowseResult_indet
   END
   ;

   clear_browse_results =
   BEGIN
       skip
   END

END
